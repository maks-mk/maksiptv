"""
–ú–æ–¥—É–ª—å UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è MaksIPTV Player
–í–µ—Ä—Å–∏—è 0.13.0

–°–æ–¥–µ—Ä–∂–∏—Ç –∫–ª–∞—Å—Å—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤:
- ClickableLabel - –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–∞—è –º–µ—Ç–∫–∞
- UIComponentFactory - —Ñ–∞–±—Ä–∏–∫–∞ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
- PlaylistUIManager - –º–µ–Ω–µ–¥–∂–µ—Ä UI –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–ª–µ–π–ª–∏—Å—Ç–∞–º–∏
"""

import os
import time
from PyQt5.QtWidgets import (
    QLabel, QPushButton, QWidget, QHBoxLayout, QVBoxLayout, QDialog, 
    QLineEdit, QTabWidget, QFileDialog, QMessageBox, QMenu
)
from PyQt5.QtCore import Qt, QSize, pyqtSignal
from PyQt5.QtGui import QCursor
import qtawesome as qta


class ClickableLabel(QLabel):
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã—Ö –º–µ—Ç–æ–∫"""

    # –°–∏–≥–Ω–∞–ª –¥–ª—è –∫–ª–∏–∫–∞
    clicked = pyqtSignal()

    def __init__(self, parent=None):
        super(ClickableLabel, self).__init__(parent)
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä —Ä—É–∫–∏
        self.setCursor(QCursor(Qt.PointingHandCursor))

    def mousePressEvent(self, event):
        if event.button() == Qt.LeftButton:
            # –í—ã–∑—ã–≤–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ
            self.clicked.emit()
        # –í—ã–∑—ã–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        super(ClickableLabel, self).mousePressEvent(event)


class UIComponentFactory:
    """–§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

    –£—Å—Ç—Ä–∞–Ω—è–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
    –†–µ–∞–ª–∏–∑—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø DRY (Don't Repeat Yourself).
    """

    @staticmethod
    def create_icon_button(icon_name, tooltip, size=QSize(28, 28), icon_size=QSize(14, 14), callback=None):
        """–°–æ–∑–¥–∞–µ—Ç —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É —Å –∏–∫–æ–Ω–∫–æ–π"""
        button = QPushButton()
        button.setIcon(qta.icon(icon_name, color='#e8e8e8'))
        button.setIconSize(icon_size)
        button.setFixedSize(size)
        button.setToolTip(tooltip)

        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –ø–æ —Ü–µ–Ω—Ç—Ä—É
        button.setStyleSheet("""
            QPushButton {
                background-color: transparent;
                border: 1px solid transparent;
                border-radius: 4px;
                padding: 0px;
                text-align: center;
                qproperty-iconSize: %dpx %dpx;
            }
            QPushButton:hover {
                background-color: rgba(90, 141, 176, 0.2);
                border-color: #5a8db0;
            }
            QPushButton:pressed {
                background-color: rgba(90, 141, 176, 0.3);
                border-color: #5a8db0;
            }
        """ % (icon_size.width(), icon_size.height()))

        if callback:
            button.clicked.connect(callback)

        return button

    @staticmethod
    def create_labeled_control(label_text, control, layout_type=QHBoxLayout):
        """–°–æ–∑–¥–∞–µ—Ç –≤–∏–¥–∂–µ—Ç —Å –º–µ—Ç–∫–æ–π –∏ —É–∫–∞–∑–∞–Ω–Ω—ã–º –∫–æ–Ω—Ç—Ä–æ–ª–æ–º"""
        container = QWidget()
        layout = layout_type()
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(8)

        label = QLabel(label_text)
        label.setStyleSheet("color: #a0a0a0;")

        layout.addWidget(label)
        layout.addWidget(control)

        container.setLayout(layout)
        return container

    @staticmethod
    def create_styled_panel(object_name, background_color="#2d2d2d"):
        """–°–æ–∑–¥–∞–µ—Ç —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å"""
        panel = QWidget()
        panel.setObjectName(object_name)
        panel.setStyleSheet(f"QWidget#{object_name} {{ background-color: {background_color}; border-radius: 8px; }}")
        return panel


class PlaylistUIManager:
    """–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä UI –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–ª–µ–π–ª–∏—Å—Ç–∞–º–∏

    –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –ø–ª–µ–π–ª–∏—Å—Ç–∞–º–∏ –≤ –ø—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:
    - –û–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å –ø–ª–µ–π–ª–∏—Å—Ç–∞–º–∏
    - –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (—Ñ–∞–π–ª/URL)
    """

    def __init__(self, parent):
        self.parent = parent

    def create_playlist_button(self):
        """–°–æ–∑–¥–∞–µ—Ç –µ–¥–∏–Ω—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–ª–µ–π–ª–∏—Å—Ç–∞–º–∏"""
        # –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ - —Å—Ç–∏–ª–∏–∑—É–µ–º –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—â–∏–º UI
        self.playlist_button = QPushButton("üìã –ü–ª–µ–π–ª–∏—Å—Ç—ã ‚ñº")
        self.playlist_button.setToolTip("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç–∞–º–∏")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏ –∫–∞–∫ —É –¥—Ä—É–≥–∏—Ö –∏–∫–æ–Ω–æ—á–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
        button_size = QSize(80, 28)  # –ù–µ–º–Ω–æ–≥–æ —à–∏—Ä–µ –¥–ª—è —Ç–µ–∫—Å—Ç–∞
        self.playlist_button.setFixedSize(button_size)

        self.playlist_button.setStyleSheet("""
            QPushButton {
                background-color: transparent;
                color: #f0f0f0;
                border: 1px solid #404040;
                border-radius: 4px;
                padding: 4px 8px;
                font-weight: normal;
                font-size: 10px;
                text-align: center;
            }
            QPushButton:hover {
                background-color: rgba(90, 141, 176, 0.2);
                border-color: #5a8db0;
            }
            QPushButton:pressed {
                background-color: rgba(90, 141, 176, 0.3);
                border-color: #5a8db0;
            }
        """)

        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é
        menu = QMenu(self.parent)

        # –î–æ–±–∞–≤–∏—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç
        add_action = menu.addAction("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç...")
        add_action.triggered.connect(self.show_add_playlist_dialog)

        # –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π
        refresh_action = menu.addAction("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π")
        refresh_action.triggered.connect(self.parent.reload_playlist)

        menu.addSeparator()

        # –ù–µ–¥–∞–≤–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç—ã (–ø–æ–¥–º–µ–Ω—é)
        recent_menu = menu.addMenu("üìö –ù–µ–¥–∞–≤–Ω–∏–µ")
        self.update_recent_submenu(recent_menu)

        menu.addSeparator()

        # –û–±–Ω–æ–≤–∏—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–ª–µ–π–ª–∏—Å—Ç
        update_builtin_action = menu.addAction("‚¨áÔ∏è –û–±–Ω–æ–≤–∏—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π")
        update_builtin_action.triggered.connect(self.parent.update_playlist_from_url)

        # –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é
        clear_action = menu.addAction("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é")
        clear_action.triggered.connect(self.parent.clear_recent_playlists)

        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –º–µ–Ω—é –∫ –∫–Ω–æ–ø–∫–µ
        self.playlist_button.setMenu(menu)

        return self.playlist_button

    def update_recent_submenu(self, menu):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–¥–º–µ–Ω—é –Ω–µ–¥–∞–≤–Ω–∏—Ö –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤"""
        menu.clear()

        if not self.parent.recent_playlists:
            no_action = menu.addAction("–ù–µ—Ç –Ω–µ–¥–∞–≤–Ω–∏—Ö –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤")
            no_action.setEnabled(False)
            return

        for playlist_path in self.parent.recent_playlists[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö
            display_name = self.parent.playlist_names.get(playlist_path, os.path.basename(playlist_path))

            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –∏–º–µ–Ω–∏
            if len(display_name) > 30:
                display_name = display_name[:27] + "..."

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ –ø–ª–µ–π–ª–∏—Å—Ç–∞
            if playlist_path == self.parent.current_playlist:
                display_name = f"‚ñ∂Ô∏è {display_name}"

            action = menu.addAction(display_name)
            action.triggered.connect(lambda checked, path=playlist_path: self.parent.open_recent_playlist(path))

    def show_add_playlist_dialog(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–∞"""
        dialog = QDialog(self.parent)
        dialog.setWindowTitle("–î–æ–±–∞–≤–∏—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç")
        dialog.setFixedSize(450, 200)

        layout = QVBoxLayout(dialog)

        # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏
        tabs = QTabWidget()

        # –í–∫–ª–∞–¥–∫–∞ "–ò–∑ —Ñ–∞–π–ª–∞"
        file_tab = QWidget()
        file_layout = QVBoxLayout(file_tab)

        file_info = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –ø–ª–µ–π–ª–∏—Å—Ç–∞ (.m3u, .m3u8)")
        file_info.setStyleSheet("color: #888; font-size: 11px;")
        file_layout.addWidget(file_info)

        file_path_layout = QHBoxLayout()
        self.file_path_edit = QLineEdit()
        self.file_path_edit.setPlaceholderText("–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –ø–ª–µ–π–ª–∏—Å—Ç–∞...")
        browse_button = QPushButton("üìÅ –û–±–∑–æ—Ä")
        browse_button.clicked.connect(self.browse_file)

        file_path_layout.addWidget(self.file_path_edit)
        file_path_layout.addWidget(browse_button)
        file_layout.addLayout(file_path_layout)

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞
        self.file_name_edit = QLineEdit()
        self.file_name_edit.setPlaceholderText("–ù–∞–∑–≤–∞–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
        file_layout.addWidget(self.file_name_edit)

        tabs.addTab(file_tab, "üìÅ –§–∞–π–ª")

        # –í–∫–ª–∞–¥–∫–∞ "–ò–∑ URL"
        url_tab = QWidget()
        url_layout = QVBoxLayout(url_tab)

        url_info = QLabel("–í–≤–µ–¥–∏—Ç–µ URL –ø–ª–µ–π–ª–∏—Å—Ç–∞")
        url_info.setStyleSheet("color: #888; font-size: 11px;")
        url_layout.addWidget(url_info)

        self.url_edit = QLineEdit()
        self.url_edit.setPlaceholderText("http://example.com/playlist.m3u")
        url_layout.addWidget(self.url_edit)

        self.name_edit = QLineEdit()
        self.name_edit.setPlaceholderText("–ù–∞–∑–≤–∞–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
        url_layout.addWidget(self.name_edit)

        tabs.addTab(url_tab, "üåê URL")

        layout.addWidget(tabs)

        # –ö–Ω–æ–ø–∫–∏
        button_layout = QHBoxLayout()

        cancel_button = QPushButton("–û—Ç–º–µ–Ω–∞")
        cancel_button.clicked.connect(dialog.reject)

        add_button = QPushButton("–î–æ–±–∞–≤–∏—Ç—å")
        add_button.setStyleSheet("""
            QPushButton {
                background-color: #4a90e2;
                color: white;
                font-weight: bold;
                padding: 8px 16px;
                border-radius: 4px;
            }
            QPushButton:hover {
                background-color: #5ba0f2;
            }
        """)
        add_button.clicked.connect(lambda: self.add_playlist(dialog, tabs.currentIndex()))

        button_layout.addStretch()
        button_layout.addWidget(cancel_button)
        button_layout.addWidget(add_button)

        layout.addLayout(button_layout)

        dialog.exec_()

    def browse_file(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞"""
        filename, _ = QFileDialog.getOpenFileName(
            self.parent, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–µ–π–ª–∏—Å—Ç", "",
            "–ü–ª–µ–π–ª–∏—Å—Ç—ã (*.m3u *.m3u8);;–í—Å–µ —Ñ–∞–π–ª—ã (*)"
        )
        if filename:
            self.file_path_edit.setText(filename)

            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–º–µ–Ω–µ–º —Ñ–∞–π–ª–∞ (–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)
            if not self.file_name_edit.text().strip():  # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ
                file_basename = os.path.splitext(os.path.basename(filename))[0]
                self.file_name_edit.setText(file_basename)

    def add_playlist(self, dialog, tab_index):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–ª–µ–π–ª–∏—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏"""
        if tab_index == 0:  # –§–∞–π–ª
            file_path = self.file_path_edit.text().strip()
            if not file_path:
                QMessageBox.warning(dialog, "–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –ø–ª–µ–π–ª–∏—Å—Ç–∞")
                return
            if not os.path.exists(file_path):
                QMessageBox.warning(dialog, "–û—à–∏–±–∫–∞", "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return

            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç–∞
            file_name = self.file_name_edit.text().strip()
            if file_name:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
                self.parent.playlist_names[file_path] = file_name
            else:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∫–∞–∫ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                default_name = os.path.splitext(os.path.basename(file_path))[0]
                self.parent.playlist_names[file_path] = default_name

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            self.parent.config_manager.set('playlist_names', self.parent.playlist_names)
            self.parent.config_manager.save_config()

            dialog.accept()
            self.parent.open_recent_playlist(file_path)

        else:  # URL
            url = self.url_edit.text().strip()
            if not url:
                QMessageBox.warning(dialog, "–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ URL –ø–ª–µ–π–ª–∏—Å—Ç–∞")
                return
            if not url.startswith(('http://', 'https://')):
                QMessageBox.warning(dialog, "–û—à–∏–±–∫–∞", "URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://")
                return

            name = self.name_edit.text().strip() or "–ü–ª–µ–π–ª–∏—Å—Ç –∏–∑ URL"

            dialog.accept()

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –ø–ª–µ–π–ª–∏—Å—Ç–∞
            self.parent.playlist_names[url] = name

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            self.parent.config_manager.set('playlist_names', self.parent.playlist_names)
            self.parent.config_manager.save_config()

            # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–ª–µ–π–ª–∏—Å—Ç
            temp_file = f"temp_playlist_{int(time.time())}.m3u"
            self.parent.download_playlist_from_url(url, temp_file, is_update=False)

    def update_menu_if_needed(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –º–µ–Ω—é –∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"""
        if hasattr(self, 'playlist_button') and self.playlist_button.menu():
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥–º–µ–Ω—é "–ù–µ–¥–∞–≤–Ω–∏–µ"
            menu = self.playlist_button.menu()
            for action in menu.actions():
                if action.menu() and "–ù–µ–¥–∞–≤–Ω–∏–µ" in action.text():
                    self.update_recent_submenu(action.menu())
                    break
